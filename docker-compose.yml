services:
  # Configuración del servicio MySQL
  mysql:
    image: mysql:8.0
    container_name: mysql-bandas
    environment:
      # Variables de entorno para configurar la base de datos
      MYSQL_DATABASE: bandas_db_user
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: bandas_user
      MYSQL_PASSWORD: bandas_pass
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - bandas-network
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u$$MYSQL_USER -p$$MYSQL_PASSWORD --silent"] # Comando para verificar si MySQL está listo para conexiones
      interval: 5s # Intervalo entre chequeos
      timeout: 3s # Tiempo máximo para que el chequeo se complete
      retries: 5 # Número de reintentos antes de considerar que el servicio no está saludable

  usuarios:
    build: . # Construir la imagen desde el Dockerfile en el directorio actual
    image: ismabc4/usuarios:local # Nombre de la imagen
    container_name: usuarios
    depends_on:
        mysql:
            condition: service_healthy # Esperar a que MySQL esté "saludable" antes de iniciar este servicio, es decir, listo para conexiones
    environment:
      # Se utiliza la URL de MySQL del servicio, no localhost porque ambos están en la misma red de Docker
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/bandas_db_user?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: bandas_user
      SPRING_DATASOURCE_PASSWORD: bandas_pass
      SPRING_PROFILES_ACTIVE: prod
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI: http://keycloak:8080/realms/tfm-bandas/protocol/openid-connect/certs
    ports: ["8081:8080"] # Mapear el puerto 8080 del contenedor al 8081 del host
    networks: [bandas-network]

  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    command: ["start-dev"]              # Dev mode (H2). Para prod: Postgres + start
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    ports: ["8080:8080"] # Mapear el puerto 8080 del contenedor al 8080 del host
    # Aunque usuarios ya utiliza puerto 8080 en el host, no hay conflicto porque Keycloak y usuarios están en contenedores separados
    # y el mapeo de puertos es independiente para cada contenedor.
    networks: [bandas-network]

volumes:
  mysql_data:

networks:
  bandas-network:
