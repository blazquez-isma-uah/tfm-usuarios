name: Docker Publish
# Este workflow construye y publica una imagen Docker en Docker Hub o GitHub Container Registry (GHCR)
# cuando se hace push a la rama main o se crea una nueva etiqueta que sigue el patrón v*.*.*
# Para publicar en Docker Hub, configura los secretos DOCKERHUB_USERNAME y DOCKERHUB_TOKEN en el repositorio.
# Si no están configurados, la imagen se publicará en GHCR.
# Asegúrate de que el nombre de la imagen en la variable IMAGE_NAME sea correcto.
# El workflow utiliza GitHub Actions para configurar QEMU y Buildx, lo que permite construir imágenes multiplataforma.
# La imagen se etiqueta con el SHA del commit, la rama y la versión semántica si corresponde.
# La acción docker/metadata-action se utiliza para generar automáticamente las etiquetas y etiquetas de la imagen.
# La acción docker/build-push-action se utiliza para construir y publicar la imagen.
# Revisa y ajusta el archivo según las necesidades de tu proyecto antes de usarlo.
# Asegúrate de que el Dockerfile esté en la raíz del repositorio o ajusta la ruta en el paso de construcción.
# También puedes modificar las plataformas de destino según sea necesario.
# Finalmente, asegúrate de que el repositorio tenga habilitado GitHub Packages si planeas usar GHCR.


#Triggers: al hacer push a main o al publicar una tag vX.Y.Z.
#setup‑qemu/buildx: habilita builds modernos (multi‑arch, cachés).
#login: elige Docker Hub (requiere DOCKERHUB_USERNAME y DOCKERHUB_TOKEN en Secrets) o GHCR (usa GITHUB_TOKEN).
#metadata-action: genera tags automáticamente: :main, :sha-xxxx, :1.0.0 si haces tag semántica.
#build-push-action: construye la imagen con tu Dockerfile y la publica.
#Consejo: si no configuras Docker Hub, publicará en GHCR → la imagen quedará en ghcr.io/<tu_org>/usuarios:<tag>.

on:
  # Se activa en push a main o cuando se crea una etiqueta que sigue el patrón v*.*.*
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]

env:
  IMAGE_NAME: usuarios

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      # Login (elige uno)
      - name: Login to Docker Hub
        if: env.DOCKERHUB_USERNAME != ''
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GHCR
        if: env.DOCKERHUB_USERNAME == ''
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKERHUB_USERNAME != '' && format('{0}/{1}', secrets.DOCKERHUB_USERNAME, env.IMAGE_NAME) || format('ghcr.io/{0}/{1}', github.repository_owner, env.IMAGE_NAME) }}
          tags: |
            type=sha
            type=ref,event=branch
            type=semver,pattern={{version}}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

